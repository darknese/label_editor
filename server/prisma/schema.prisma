// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  /// Email пользователя
  /// @FieldType('Scalars.GraphQLEmailAddress')
  email     String  @unique @db.VarChar(50)
  password  String
  /// Фамилия
  /// @Validator.MinLength(3)
  /// @Validator.MaxLength(50)
  lastName  String  @map("last_name") @db.VarChar(50)
  /// Имя
  /// @Validator.MinLength(3)
  /// @Validator.MaxLength(50)
  firstName String  @map("first_name") @db.VarChar(50)
  /// Отчество
  /// @Validator.MaxLength(50)
  sirName   String? @map("sir_name") @db.VarChar(50)
  /// Флаг активности пользователя
  active    Boolean @default(true)
  /// Номер телефона
  /// @Validator.MinLength(3)
  /// @Validator.MaxLength(20)
  phone     String? @db.VarChar(50)
  /// Роль пользователя
  role      Role    @default(USER)
  /// Пол пользователя
  gender    Gender  @default(UNKNOWN)

  /// Дата создания
  createdAt DateTime @default(now()) @map("created_at")
  /// Дата обновления
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  /// Мои файлы
  files File[]

  templates Template[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

enum Gender {
  UNKNOWN
  MALE
  FEMALE
}

model File {
  /// Идентификатор файла
  id        String   @id @default(uuid())
  /// Название файла
  /// @Validator.MinLength(3)
  name      String   @db.VarChar(512)
  type      FileType @default(OTHER)
  /// Название сервиса, на котором расположен файл
  /// @FieldType('Scalars.GraphQLURL')
  serverUrl String   @map("server_url") @db.VarChar(64)
  /// Название баскета для хранения файла
  /// @Validator.MinLength(3)
  bucket    String   @db.VarChar(64)
  /// Название файла в баскете
  /// @Validator.MinLength(3)
  key       String   @db.VarChar(512)

  /// Дата создания
  createdAt DateTime @default(now()) @map("created_at")
  /// Дата обновления
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  /// Файл пользователя, если null - файл системный
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?  @map("user_id")

  template   Template? @relation(fields: [templateId], references: [id])
  templateId String?   @map("template_id")

  @@map("files")
}

enum FileType {
  IMAGE
  DOCUMENT
  VIDEO
  OTHER
}

model Template {
  /// Идентификатор шаблона
  id          String   @id @default(uuid())
  /// Название шаблона
  name        String   @db.VarChar(255)
  /// Описание шаблона (опционально)
  description String?  @db.VarChar(1000)
  /// Данные шаблона в JSON формате
  data        Json
  /// Превью шаблона (опционально)
  preview     String?  @db.VarChar(512)
  /// Владелец шаблона (пользователь)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  /// Дата создания
  createdAt   DateTime @default(now()) @map("created_at")
  /// Дата обновления
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  /// Связанные изображения шаблона
  files File[]

  @@map("templates")
}
